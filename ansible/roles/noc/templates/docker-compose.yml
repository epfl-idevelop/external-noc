version: '3'
services:
  pushgateway:
    image: prom/pushgateway
    restart: always
    networks:
      - {{ traefik.network }}
      - default
    labels:
      - "traefik.domain={{ frontend.domain }}"
      - "traefik.frontend.rule=Host:pgw{{ dnspostfix }}.{{ frontend.domain }}"
      - "traefik.docker.network={{ traefik.network }}"
      - "traefik.enable=true"
      - "traefik.port={{ pushgateway.port }}"

  grafana:
    image: grafana/grafana
    restart: always
    environment:
      # when plugin list changes docker-compose up -d --build grafana is required
      GF_INSTALL_PLUGINS: "{{ grafana.plugins | join(',') }}"

      # GF_RENDERING_SERVER_URL: http://renderer:8081/render
      # GF_RENDERING_CALLBACK_URL: http://grafana:3000/
      # GF_LOG_FILTERS: rendering:debug

    volumes:
      - "{{ noc.install_path }}/data/grafana/data:/var/lib/grafana"
      - "{{ noc.install_path }}/data/grafana/conf/grafana.ini:/etc/grafana/grafana.ini"
      - "{{ noc.install_path }}/data/grafana/provisioning:/etc/grafana/provisioning"
    networks:
      - {{ traefik.network }}
      - default
    labels:
      - "traefik.port={{ grafana.port }}"
      - "traefik.domain={{ frontend.domain }}"
      - "traefik.frontend.rule=Host:grafana{{ dnspostfix }}.{{ frontend.domain }}"
      - "traefik.docker.network={{ traefik.network }}"
      - "traefik.enable=true"
{% if frontend.protocol == 'https' %}
      - "traefik.frontend.redirect.entryPoint={{ frontend.protocol }}"
{% endif %}

  # renderer:
  #   image: grafana/grafana-image-renderer:latest
  #   ports:
  #     - 8081

# https://github.com/prometheus/node_exporter#using-docker
  nodeexporter:
    image: quay.io/prometheus/node-exporter
    restart: always
    pid: "host"
#    network_mode: host
    networks:
      - {{ traefik.network }}
      - default
    command:
      - '--path.rootfs=/host'
    volumes:
      - /:/host:ro,rslave
    labels:
      - "traefik.port={{ nodeexporter.port }}"
      - "traefik.domain={{ frontend.domain }}"
      - "traefik.frontend.rule=Host:nodeexporter{{ dnspostfix }}.{{ frontend.domain }}"
      - "traefik.docker.network={{ traefik.network }}"
      - "traefik.enable=true"
{% if frontend.protocol == 'https' %}
      - "traefik.frontend.redirect.entryPoint={{ frontend.protocol }}"
{% endif %}


networks:
  {{ traefik.network }}:
    external: true
