version: '3'
services:
  prometheus:                                  # Prometheus service on port 9090
    container_name: "{{container_prefix}}prometheus"
    image: prom/prometheus
    ports:
      - {{ ports.prometheus }}
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    restart: always
    networks:
      - {{ traefik.network }}
      - default
    labels:
      - "traefik.domain={{ frontend.domain }}"
      - "traefik.frontend.rule=Host:prometheus.{{ frontend.domain }}"
      - "traefik.docker.network={{ traefik.network }}"
      - "traefik.enable=true"
      - "traefik.port={{ ports.prometheus }}"
      - "traefik.frontend.auth.basic={{ frontend.htpass | htpasswd }}"
{% if frontend.protocol == 'https' %}
      - "traefik.frontend.redirect.entryPoint={{ frontend.protocol }}"
{% endif %}

  alertmanager:
    container_name: "{{container_prefix}}alertmanager"
    image: quay.io/prometheus/alertmanager
    ports:
      - {{ ports.alertmanager }}
    volumes:
      - ./alertmanager/config:/config
    command: --config.file=/config/simple.yml
    restart: always
    networks:
      - {{ traefik.network }}
      - default
    labels:
      - "traefik.domain={{ frontend.domain }}"
      - "traefik.frontend.rule=Host:am.{{ frontend.domain }}"
      - "traefik.docker.network={{ traefik.network }}"
      - "traefik.enable=true"
      - "traefik.port={{ ports.alertmanager }}"
{% if frontend.protocol == 'https' %}
      - "traefik.frontend.redirect.entryPoint=https"
{% endif %}

  telegram-bot:                            # Telegram bot
    image: metalmatze/alertmanager-bot:0.4.0
    environment:
      ALERTMANAGER_URL: http://alertmanager:{{ ports.alertmanager }}
      STORE: bolt
      BOLT_PATH: /data/bot.db
      TELEGRAM_ADMIN: "{{ telegram.ADMINISTRATOR_ID1 }}"
      TELEGRAM_TOKEN: "{{ telegram.TOKEN }}"
      TEMPLATE_PATHS: /templates/default.tmpl
    volumes:
      - './telegram-bot/data:/data'
    command:
      -  '--listen.addr=0.0.0.0:{{ ports.telegram }}'
    restart: always
    networks:
      - traefik
      - default
    labels:
      - "traefik.domain={{ frontend.domain }}"
      - "traefik.frontend.rule=Host:telegram.{{ frontend.domain }}"
      - "traefik.docker.network={{ traefik.network }}"
      - "traefik.enable=true"
      - "traefik.port={{ ports.telegram }}"

  pushgateway:
    container_name: "{{container_prefix}}pushgateway"
    image: prom/pushgateway
    ports:
      - "{{ ports.pushgateway }}"
    restart: always
    networks:
      - {{ traefik.network }}
      - default
    labels:
      - "traefik.domain={{ frontend.domain }}"
      - "traefik.frontend.rule=Host:pgw.{{ frontend.domain }}"
      - "traefik.docker.network={{ traefik.network }}"
      - "traefik.enable=true"
      - "traefik.port={{ ports.pushgateway }}"

  blackbox-exporter:
    container_name: "{{container_prefix}}blackbox-exporter"
    image: prom/blackbox-exporter
    volumes:
      - ./blackbox-exporter/config:/config
    ports:
      - "{{ ports.blackbox }}"
    restart: always
    command: --config.file=/config/blackbox.yml
    restart: always
    networks:
      - {{ traefik.network }}
      - default
    labels:
      - "traefik.domain={{ frontend.domain }}"
      - "traefik.frontend.rule=Host:bbe.{{ frontend.domain }}"
      - "traefik.docker.network={{ traefik.network }}"
      - "traefik.enable=true"
      - "traefik.port={{ ports.blackbox }}"

  grafana:
    container_name: "{{container_prefix}}grafana"
    image: grafana/grafana
    ports:
      - "{{ ports.grafana }}"
    restart: always
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/plugins:/var/lib/grafana/plugins
      - ./grafana/conf/grafana.ini:/etc/grafana/grafana.ini
      - ./grafana/provisioning:/etc/grafana/provisioning
      # - ./grafana/data:/var/lib/grafana
      # - ./grafana/logs:/var/log/grafana
      # - ./grafana/ssl/fullchain.pem:/var/ssl/server.crt
      # - ./grafana/ssl/privkey.pem:/var/ssl/server.key
    environment:
      GF_SECURITY_ADMIN_PASSWORD: "{{grafana.GF_SECURITY_ADMIN_PASSWORD}}"
      GF_AUTH_BASIC_ENABLED: "false"
      GF_AUTH_GITHUB_ENABLED: "true"
      GF_AUTH_GITHUB_ALLOW_SIGN_UP: "false"
      GF_AUTH_GITHUB_SCOPES: user:email,read:org
      GF_AUTH_GITHUB_AUTH_URL: https://github.com/login/oauth/authorize
      GF_AUTH_GITHUB_TOKEN_URL: https://github.com/login/oauth/access_token
      GF_AUTH_GITHUB_REDIRECT_URI: {{ frontend.protocol }}://grafana.{{ frontend.domain }}/login/github
      GF_AUTH_GITHUB_API_URL: https://api.github.com/user
      GF_AUTH_GITHUB_ALLOWED_ORGANIZATIONS: epfl-idevelop
      GF_AUTH_GITHUB_CLIENT_ID: "{{grafana.GF_AUTH_GITHUB_CLIENT_ID}}"
      GF_AUTH_GITHUB_CLIENT_SECRET: "{{grafana.GF_AUTH_GITHUB_CLIENT_SECRET}}"
      GF_AUTH_GITHUB_ALLOWED_ORGANIZATIONS: epfl-idevelop
    networks:
      - {{ traefik.network }}
      - default
    labels:
      - "traefik.port={{ ports.grafana }}"
      - "traefik.domain={{ frontend.domain }}"
      - "traefik.frontend.rule=Host:grafana.{{ frontend.domain }}"
      - "traefik.docker.network={{ traefik.network }}"
      - "traefik.enable=true"
{% if frontend.protocol == 'https' %}
      - "traefik.frontend.redirect.entryPoint={{ frontend.protocol }}"
{% endif %}

volumes:
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  {{ traefik.network }}:
    external: true
