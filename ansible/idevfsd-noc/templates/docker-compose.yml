version: '3'
services:
  prometheus:                                  # Prometheus service on port 9090
    image: prom/prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    restart: always
    networks:
      - {{ traefik.network }}
      - default
    labels:
      - "traefik.domain={{ frontend.domain }}"
      - "traefik.frontend.rule=Host:prometheus{{ dnspostfix }}.{{ frontend.domain }}"
      - "traefik.docker.network={{ traefik.network }}"
      - "traefik.enable=true"
      - "traefik.port={{ prometheus.port }}"
      - "traefik.frontend.auth.basic={{ frontend.htpass | htpasswd }}"
{% if frontend.protocol == 'https' %}
      - "traefik.frontend.redirect.entryPoint={{ frontend.protocol }}"
{% endif %}

  alertmanager:
    image: quay.io/prometheus/alertmanager
    volumes:
      - ./alertmanager/config:/config
    command: --config.file=/config/simple.yml
    restart: always
    networks:
      - {{ traefik.network }}
      - default
    labels:
      - "traefik.domain={{ frontend.domain }}"
      - "traefik.frontend.rule=Host:am{{ dnspostfix }}.{{ frontend.domain }}"
      - "traefik.docker.network={{ traefik.network }}"
      - "traefik.enable=true"
      - "traefik.port={{ alertmanager.port }}"
      - "traefik.frontend.auth.basic={{ frontend.htpass | htpasswd }}"
{% if frontend.protocol == 'https' %}
      - "traefik.frontend.redirect.entryPoint=https"
{% endif %}

  # telegram-bot:                            # Telegram bot
  #   image: metalmatze/alertmanager-bot:0.4.0
  #   environment:
  #     ALERTMANAGER_URL: http://alertmanager:{{ alertmanager.port }}
  #     STORE: bolt
  #     BOLT_PATH: /data/bot.db
  #     TELEGRAM_ADMIN: "{{ telegram.ADMINISTRATOR_ID1 }}"
  #     TELEGRAM_TOKEN: "{{ telegram.TOKEN }}"
  #     TEMPLATE_PATHS: /templates/default.tmpl
  #   volumes:
  #     - './telegram-bot/data:/data'
  #   command:
  #     -  '--listen.addr=0.0.0.0:{{ telegram.port }}'
  #   restart: always
  #   networks:
  #     - traefik
  #     - default
  #   labels:
  #     - "traefik.domain={{ frontend.domain }}"
  #     - "traefik.frontend.rule=Host:telegram.{{ frontend.domain }}"
  #     - "traefik.docker.network={{ traefik.network }}"
  #     - "traefik.enable=true"
  #     - "traefik.port={{ telegram.port }}"

  pushgateway:
    image: prom/pushgateway
    restart: always
    networks:
      - {{ traefik.network }}
      - default
    labels:
      - "traefik.domain={{ frontend.domain }}"
      - "traefik.frontend.rule=Host:pgw{{ dnspostfix }}.{{ frontend.domain }}"
      - "traefik.docker.network={{ traefik.network }}"
      - "traefik.enable=true"
      - "traefik.port={{ pushgateway.port }}"

  grafana:
    image: grafana/grafana
    restart: always
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/plugins:/var/lib/grafana/plugins
      - ./grafana/conf/grafana.ini:/etc/grafana/grafana.ini
      - ./grafana/provisioning:/etc/grafana/provisioning
      # - ./grafana/data:/var/lib/grafana
      # - ./grafana/logs:/var/log/grafana
      # - ./grafana/ssl/fullchain.pem:/var/ssl/server.crt
      # - ./grafana/ssl/privkey.pem:/var/ssl/server.key
    networks:
      - {{ traefik.network }}
      - default
    labels:
      - "traefik.port={{ grafana.port }}"
      - "traefik.domain={{ frontend.domain }}"
      - "traefik.frontend.rule=Host:grafana{{ dnspostfix }}.{{ frontend.domain }}"
      - "traefik.docker.network={{ traefik.network }}"
      - "traefik.enable=true"
{% if frontend.protocol == 'https' %}
      - "traefik.frontend.redirect.entryPoint={{ frontend.protocol }}"
{% endif %}

volumes:
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  {{ traefik.network }}:
    external: true
